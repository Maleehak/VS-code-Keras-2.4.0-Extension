{
    "Keras 2.4.0 Transfer Learning using Xeception":{
        "prefix":"!xeceptiontl",
        "body":[
            "import tensorflow as tf",
            "from keras.models import Sequential",
            "from tensorflow.keras import layers",
            "from keras.layers.normalization import BatchNormalization",
            "from tensorflow.keras.preprocessing.image import ImageDataGenerator",
            "from tensorflow.keras.layers import Dense,Input,Concatenate,Embedding,Dropout,Flatten",
            "from tensorflow.keras.applications.xception import Xception",
            "\n",
            "base_model = Xception(weights='imagenet',include_top=False,input_shape=(75,75,3))",
            "base_model.trainable = False",
            "\n",
            "#Import testing and training dataset",
            "#Loading data from train and test directory",
            "trdata = ImageDataGenerator()",
            "traindata = trdata.flow_from_directory(directory=\"train\",target_size=(75,75))",
            "tsdata = ImageDataGenerator()",
            "testdata = tsdata.flow_from_directory(directory=\"test\", target_size=(75,75))",
            "\n",
            "model = Sequential()",
            "model.add(base_model)",
            "model.add(Flatten())",
            "model.add(Dropout(.4))",
            "model.add(Dense(64,activation='relu'))",
            "model.add(BatchNormalization())",
            "model.add(Dense(${1:No. of output classes},activation='softmax'))",
            "model.add(BatchNormalization())",
            "model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])",
            "\n",
            "history = model.fit(traindata,epochs=10,steps_per_epoch =500,validation_data = testdata ,validation_steps=50,shuffle=True,verbose=1)"
        ]
    }
}